// <auto-generated />
using System;
using FacilityDataMigrationScaffoldApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FacilityDataMigrationScaffoldApi.Migrations
{
    [DbContext(typeof(FacilitiesDbContext))]
    partial class FacilitiesDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0-rc.2.23480.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EntityModel.CapacityCounter", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Close")
                        .HasColumnType("datetime2");

                    b.Property<int?>("FacilityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Open")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("FacilityId");

                    b.ToTable("CapacityCounters", (string)null);
                });

            modelBuilder.Entity("EntityModel.CounterDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CapacityCounterId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<DateTime>("CountedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CountedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CapacityCounterId");

                    b.ToTable("CounterDetails", (string)null);
                });

            modelBuilder.Entity("EntityModel.Facility", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 77L);

                    b.Property<string>("InternalIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MaxCapacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Facilities", (string)null);
                });

            modelBuilder.Entity("EntityModel.CapacityCounter", b =>
                {
                    b.HasOne("EntityModel.Facility", null)
                        .WithMany("Counters")
                        .HasForeignKey("FacilityId");
                });

            modelBuilder.Entity("EntityModel.CounterDetails", b =>
                {
                    b.HasOne("EntityModel.CapacityCounter", null)
                        .WithMany("CounterDetails")
                        .HasForeignKey("CapacityCounterId");
                });

            modelBuilder.Entity("EntityModel.CapacityCounter", b =>
                {
                    b.Navigation("CounterDetails");
                });

            modelBuilder.Entity("EntityModel.Facility", b =>
                {
                    b.Navigation("Counters");
                });
#pragma warning restore 612, 618
        }
    }
}
